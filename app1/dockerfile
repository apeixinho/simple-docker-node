FROM node:lts-alpine

# Setup environment variables.
# If using one liner breakpoint '\' you can't use previously defined
# variables in posterior variables. Just define ENV per line
ENV NODE_ENV=production
# ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
# ENV PATH=${PATH}:${NPM_CONFIG_PREFIX}/bin

# update and upgrade, install required packages with no cache
RUN apk update && apk upgrade
    # && \
    # apk add --no-cache build-base git && \
    # rm -f /var/cache/apk/*

# https://www.alpinelinux.org/posts/Docker-image-vulnerability-CVE-2019-5021.html
# https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5021
# make sure root login is disabled
RUN sed -i -e 's/^root::/root:!:/' /etc/shadow
 
# add variables to PATH
# ENV PATH="${PATH}:$(yarn global bin)"
# ENV YARN_GLOBAL=/home/app/.yarn/bin
# ENV PATH=${PATH}:${YARN_GLOBAL}

# Following best practices at:
# https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md
#
# add a group and user for our app, for a system user or group add '-S' to addgroup or adduser commands
#
RUN addgroup app -S && adduser -S -g app app

COPY package.json pm2-conf.json app1.js public /home/app/site1/

RUN chown -R app:app /home/app

USER app

WORKDIR /home/app/site1

RUN npm i --no-package-lock --no-cache
# RUN npm i -g pm2 --no-save --no-package-lock --ignore-scripts && \
# npm i express helmet --no-save --no-package-lock --ignore-scripts 

EXPOSE 10011

# CMD ["pm2-docker", "start", "pm2-conf.json"]
CMD ["node_modules/pm2/bin/pm2-docker", "start", "pm2-conf.json"]
# CMD ["tail","-f", "/dev/null"]
